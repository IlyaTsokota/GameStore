@model GameStore.Web.Areas.Admin.ViewModels.ProductViewModel.CreateProductViewModel

@{
    ViewBag.Title = "Создание товара";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

    <div class="d-flex align-items-center my-3">
        <h2>@ViewBag.Title</h2>
    </div>

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div>
        @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 10, 0, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OldPrice, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPrice, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Warranty, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Warranty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Warranty, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.CategoryId, "Категория", new { @class = "col" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.CategoryId, Model.Categories, "Выберите категорию", new { @class = "form-control", id = "input-category" })
                @Html.ValidationMessageFor(model => model.CategoryId, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Images, "Загрузить фото", new { @class = "col" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.Images, new { type = "file", @class = "form-control upload__image", accept = "image/*", multiple = true })
                @Html.ValidationMessageFor(x => x.Images, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Создать" class="btn btn-primary" />
                @Html.ActionLink("Назад", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}