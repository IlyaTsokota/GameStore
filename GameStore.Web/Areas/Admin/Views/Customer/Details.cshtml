@model GameStore.Web.Areas.Admin.ViewModels.UserViewModels.DetailsUserViewModel

@{
    ViewBag.Title = Model.FullName;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-between align-items-center">
    <h2>@ViewBag.Title</h2>

    @if (!Model.IsBlocked)
    {
        using (Html.BeginForm("Block", "Customer"))
        {
            @Html.ValidationSummary()
            @Html.Hidden("id", Model.Id)
            <button class="btn btn-danger">Заблокировать</button>
        }
    }
    else
    {
        using (Html.BeginForm("Unblock", "Customer"))
        {
            @Html.ValidationSummary()
            @Html.Hidden("id", Model.Id)
            <button class="btn btn-warning">Разблокировать</button>
        }
    }

</div>

<span class="text-danger">@ViewData["Message"]</span>

<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsBlocked)
        </dt>

        <dd>
            @if (Model.IsBlocked)
            {
                <text>Да</text>
            }
            else
            {
                <text>Нет</text>
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

    </dl>
</div>

<h3>Заказы</h3>
@if (Model.Orders.Count != 0)
{
    @Html.Partial("~/Areas/Admin/Views/Order/O.cshtml", Model.Orders)
}
else
{
    <p>Заказов нет</p>
}
<p>
    @Html.ActionLink("Назад", "Index", null, new { @class = "btn btn-secondary" })
</p>